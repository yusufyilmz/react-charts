// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RESULTBOX COMPONENT snapshot correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Result>
    <Connect(ResultContainer)>
      <ResultContainer
        error={true}
        message="test"
        resetResult={[Function]}
      >
        <Component
          closeModal={[Function]}
          error={true}
          message="test"
        >
          <Modal>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": true,
                    "lastClassName": "estkNj",
                    "rules": Array [
                      "
    position: fixed; 
    z-index: 1; 
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto; 
    background-color: rgb(0,0,0); 
    background-color: rgba(0,0,0,0.4); 
",
                    ],
                  },
                  "displayName": "Modal",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-bdVaJa estkNj"
              >
                <ModalContent>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bwzfXH",
                          "isStatic": true,
                          "lastClassName": "gYiqU",
                          "rules": Array [
                            "
    margin: 40% auto;
    text-align: center;
    font-size: x-large;
    width: 60%; 
    padding: 15px;
    margin-bottom: 20px;
    border: 1px solid transparent;
    border-radius: 4px;
    border-color: #ebccd1;
    background-color: #f2dede;
    color: #a94442;
",
                          ],
                        },
                        "displayName": "ModalContent",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bwzfXH",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="sc-bwzfXH gYiqU"
                    >
                      <ModalClose
                        onClick={[Function]}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htpNat",
                                "isStatic": true,
                                "lastClassName": "dzjYjY",
                                "rules": Array [
                                  "
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
",
                                ],
                              },
                              "displayName": "ModalClose",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htpNat",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <span
                            className="sc-htpNat dzjYjY"
                            onClick={[Function]}
                          >
                            Ã—
                          </span>
                        </StyledComponent>
                      </ModalClose>
                      <strong>
                        test
                      </strong>
                    </div>
                  </StyledComponent>
                </ModalContent>
              </div>
            </StyledComponent>
          </Modal>
        </Component>
      </ResultContainer>
    </Connect(ResultContainer)>
  </Result>
</Provider>
`;
